#include <iostream>
#include <sqlite3.h>
using namespace std;

static int callback(void* NotUsed, int argc, char** argv, char** azColName) {
    for (int i = 0; i < argc; i++) {
        cout << azColName[i] << ": " << (argv[i] ? argv[i] : "NULL") << " ";
    }
    cout << endl;
    return 0;
}

int main() {
    sqlite3* db;
    char* errMsg = 0;
    int rc;

    rc = sqlite3_open("userdb.db", &db);
    if (rc) {
        cerr << "Can't open database: " << sqlite3_errmsg(db) << endl;
        return 1;
    } else {
        cout << "Opened database successfully\n";
    }

    const char* createTableSQL =
        "CREATE TABLE IF NOT EXISTS User ("
        "ID INT PRIMARY KEY NOT NULL, "
        "Name TEXT NOT NULL, "
        "Age INT NOT NULL);";

    rc = sqlite3_exec(db, createTableSQL, 0, 0, &errMsg);
    if (rc != SQLITE_OK) {
        cerr << "SQL error: " << errMsg << endl;
        sqlite3_free(errMsg);
    } else {
        cout << "Table created successfully\n";
    }

    const char* insertSQL =
        "INSERT INTO User (ID, Name, Age) VALUES (1, 'Alice', 23);"
        "INSERT INTO User (ID, Name, Age) VALUES (2, 'Bob', 30);"
        "INSERT INTO User (ID, Name, Age) VALUES (3, 'Charlie', 28);"
        "INSERT INTO User (ID, Name, Age) VALUES (4, 'Diana', 25);"
        "INSERT INTO User (ID, Name, Age) VALUES (5, 'Ethan', 35);";

    rc = sqlite3_exec(db, insertSQL, 0, 0, &errMsg);
    if (rc != SQLITE_OK) {
        cerr << "SQL error: " << errMsg << endl;
        sqlite3_free(errMsg);
    } else {
        cout << "Records inserted successfully\n";
    }

    const char* selectSQL = "SELECT * FROM User;";
    rc = sqlite3_exec(db, selectSQL, callback, 0, &errMsg);
    if (rc != SQLITE_OK) {
        cerr << "SQL error: " << errMsg << endl;
        sqlite3_free(errMsg);
    }

    sqlite3_close(db);
    return 0;
}
